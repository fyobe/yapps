<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vouov.yapps.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.vouov.yapps.model.User" >
    <id column="userID" property="userID" jdbcType="INTEGER" />
    <result column="loginName" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="lastLoginTime" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="failLoginCount" property="failLoginCount" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userID = #{userID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vouov.yapps.model.User" >
    insert into user (userID, loginName, password, 
      userName, mobile, email, 
      lastLoginTime, failLoginCount, status, 
      createTime, updateTime)
    values (#{userID,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{failLoginCount,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.vouov.yapps.model.User" >
    update user
    set loginName = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      failLoginCount = #{failLoginCount,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where userID = #{userID,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select userID, loginName, password, userName, mobile, email, lastLoginTime, failLoginCount, 
    status, createTime, updateTime
    from user
    where userID = #{userID,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select userID, loginName, password, userName, mobile, email, lastLoginTime, failLoginCount, 
    status, createTime, updateTime
    from user
  </select>
</mapper>